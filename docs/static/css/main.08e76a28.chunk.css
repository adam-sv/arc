@import url(https://fonts.googleapis.com/css?family=Open+Sans&display=swap);
@import url(https://fonts.googleapis.com/css?family=Lato&display=swap);
@import url(https://fonts.googleapis.com/css?family=Oswald&display=swap);
@-webkit-keyframes drawer-slide-in-from-left {
  from { transform: translateX(-100%); }
  to { transform: translateX(0); }
}

@keyframes drawer-slide-in-from-left {
  from { transform: translateX(-100%); }
  to { transform: translateX(0); }
}

@-webkit-keyframes drawer-slide-in-from-right {
  from { transform: translateX(100%); }
  to { transform: translateX(0); }
}

@keyframes drawer-slide-in-from-right {
  from { transform: translateX(100%); }
  to { transform: translateX(0); }
}

@-webkit-keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@-webkit-keyframes grow {
  from { transform: scaleY(0); }
  to { transform: scaleY(1); }
}

@keyframes grow {
  from { transform: scaleY(0); }
  to { transform: scaleY(1); }
}

* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  box-sizing: border-box;
  overscroll-behavior-x: contain;
}

html {
  font-size: 62.5%;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  font-size: 1.6rem;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

#root {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/* DEFINE COLORS
 * see config/webpack.config.js > require('postcss-mixins') > themify(mixin, stringArgs)
 * for each color, we want multiple versions for hover, disabled, or custom opacity states
 * we accomplish this with the `themify` mixin
 * @mixin themify dark-indigo #111e6c;
 * writes the following, some of which is later again changed by PostCSS into RGB(x, y, z):
 body {
   --dark-indigo: #111e6c;
   --dark-indigo-hover: color(#111e6c shade(23%)); // compiles to a slightly darker color in RGB
   --dark-indigo-disabled: color(#111e6c a(40%));  // compiles down to a slightly transparent color in RGBA
   --dark-indigo-rgb: color(#111e6c a(100%));      // compiles directly to the hex code in RGB
 }
 */
body {
  --dark-indigo: #111e6c;
  --dark-indigo-hover: rgb(13, 23, 83);
  --dark-indigo-disabled: rgba(17, 30, 108, 0.4);
  --dark-indigo-rgb: 17,30,108;
}
body {
  --dusk: #4c516e;
  --dusk-hover: rgb(59, 62, 85);
  --dusk-disabled: rgba(76, 81, 110, 0.4);
  --dusk-rgb: 76,81,110;
}
body {
  --nice-blue: #0f52ba;
  --nice-blue-hover: rgb(12, 63, 143);
  --nice-blue-disabled: rgba(15, 82, 186, 0.4);
  --nice-blue-rgb: 15,82,186;
}
body {
  --seafoam-blue: #26d1c1;
  --seafoam-blue-hover: rgb(29, 161, 149);
  --seafoam-blue-disabled: rgba(38, 209, 193, 0.4);
  --seafoam-blue-rgb: 38,209,193;
}
body {
  --robins-egg: #61e2fa;
  --robins-egg-hover: rgb(75, 174, 193);
  --robins-egg-disabled: rgba(97, 226, 250, 0.4);
  --robins-egg-rgb: 97,226,250;
}
body {
  --bluish-green: #26d1c1;
  --bluish-green-hover: rgb(29, 161, 149);
  --bluish-green-disabled: rgba(38, 209, 193, 0.4);
  --bluish-green-rgb: 38,209,193;
}
body {
  --orange: #f87304;
  --orange-hover: rgb(191, 89, 3);
  --orange-disabled: rgba(248, 115, 4, 0.4);
  --orange-rgb: 248,115,4;
}
body {
  --red: #d44205;
  --red-hover: rgb(163, 51, 4);
  --red-disabled: rgba(212, 66, 5, 0.4);
  --red-rgb: 212,66,5;
}
body {
  --yellow: #f8e71c;
  --yellow-hover: rgb(191, 178, 22);
  --yellow-disabled: rgba(248, 231, 28, 0.4);
  --yellow-rgb: 248,231,28;
}
body {
  --white: #ffffff;
  --white-hover: rgb(196, 196, 196);
  --white-disabled: rgba(255, 255, 255, 0.4);
  --white-rgb: 255,255,255;
}
body {
  --black: #000000;
  --black-hover: rgb(0, 0, 0);
  --black-disabled: rgba(0, 0, 0, 0.4);
  --black-rgb: 0,0,0;
}
body {
  --blue: #017fff;
  --blue-hover: rgb(1, 98, 196);
  --blue-disabled: rgba(1, 127, 255, 0.4);
  --blue-rgb: 1,127,255;
}

/* ASSIGN COLORS TO THE THEME
 * now we want to map each color we generated to the theme
 * @mixin mapToTheme primary nice-blue
 * writes the following
 body {
   --primary: --nice-blue;
   --primary-hover: --nice-blue-hover;
   --primary-disabled: --nice-blue-disabled;
   --primary-rgb: --nice-blue-rgb;
 }
 * so now the developer has access to all these variants in the generic theme
 * which should be their only color interface
 */
body {
  --primary: var(--nice-blue);
  --primary-hover: var(--nice-blue-hover);
  --primary-disabled: var(--nice-blue-disabled);
  --primary-rgb: var(--nice-blue-rgb);
}
body {
  --secondary: var(--dark-indigo);
  --secondary-hover: var(--dark-indigo-hover);
  --secondary-disabled: var(--dark-indigo-disabled);
  --secondary-rgb: var(--dark-indigo-rgb);
}
body {
  --tertiary: var(--seafoam-blue);
  --tertiary-hover: var(--seafoam-blue-hover);
  --tertiary-disabled: var(--seafoam-blue-disabled);
  --tertiary-rgb: var(--seafoam-blue-rgb);
}
body {
  --error: var(--red);
  --error-hover: var(--red-hover);
  --error-disabled: var(--red-disabled);
  --error-rgb: var(--red-rgb);
}
body {
  --warning: var(--orange);
  --warning-hover: var(--orange-hover);
  --warning-disabled: var(--orange-disabled);
  --warning-rgb: var(--orange-rgb);
}

/* ASSIGN GREYS
 * greys are hard to name, low-contrast is verbose, etc
 * this mixin generates:
body {
  --grey-0: #ffffff;
  --grey-0-hover: color(#ffffff shade(23%));
  --grey-1: #f6f8fa;
  --grey-1-hover: color(#f6f8fa shade(23%));
  ...
}
 * for however many greys are listed here. In code, I only rely on grey-0 to grey-3
 */
:root {
  --grey-0: #ffffff;
  --grey-0-hover: rgb(196, 196, 196);
  --grey-0-rgb: 255,255,255;
  --grey-1: #f6f8fa;
  --grey-1-hover: rgb(189, 191, 193);
  --grey-1-rgb: 246,248,250;
  --grey-2: #e1e3e5;
  --grey-2-hover: rgb(173, 175, 176);
  --grey-2-rgb: 225,227,229;
  --grey-3: #9a9d9e;
  --grey-3-hover: rgb(119, 121, 122);
  --grey-3-rgb: 154,157,158;
  --grey-4: #5b5b5b;
  --grey-4-hover: rgb(70, 70, 70);
  --grey-4-rgb: 91,91,91;
  --grey-5: #414345;
  --grey-5-hover: rgb(50, 52, 53);
  --grey-5-rgb: 65,67,69;
}

/* SOME MANUAL WIRING
 * As far as I can tell, there's no way to set these on-text and other variables automatically
 * because I don't see how we could compute that contrast
 */
:root {
  /* layout */
  --background: var(--grey-1);
  --background-hover: var(--grey-1-hover);
  --background-rgb: var(--grey-1-rgb);
  --surface: var(--grey-0);
  --surface-hover: var(--grey-0-hover);
  --surface-rgb: var(--grey-0-rgb);
  --color-border: var(--grey-2);
  --color-border-rgb: var(--grey-2-rgb);
  --color-border-dark: var(--grey-3);
  --color-border-dark-rgb: var(--grey-3-rgb);

  /* on colors */
  --on-primary: var(--grey-0);
  --on-primary-variant: var(--grey-0);
  --on-secondary: var(--grey-0);
  --on-tertiary: var(--grey-0);
  --on-surface: var(--grey-5);
  --on-background: var(--grey-5);
  --on-error: var(--grey-0);
  --on-warning: var(--grey-0);
}

/* sizing styles */
/* ArcSizeDefault */
:root {
  --ARC-sizing-displayElement-height: 88px;
  --ARC-sizing-inputElement-height: 44px;
  --ARC-sizing-labelSize: 12px;
  --ARC-sizing-fontSize: 14px;
  --ARC-sizing-horizontalSpace: 8px;
  --ARC-sizing-verticalSpace: 4px;
  --fonts: Lato, sans-serif;
}

/* ArcSizeCompact */
:root {
  --ARC-sizing-compact-displayElement-height: 72px;
  --ARC-sizing-compact-inputElement-height: 36px;
  --ARC-sizing-compact-labelSize: 10px;
  --ARC-sizing-compact-fontSize: 12px;
  --ARC-sizing-compact-horizontalSpace: 6px;
  --ARC-sizing-compact-verticalSpace: 3px;
}

/* ArcSizeLarge */
:root {
  --ARC-sizing-large-displayElement-height: 104px;
  --ARC-sizing-large-inputElement-height: 52px;
  --ARC-sizing-large-labelSize: 12px;
  --ARC-sizing-large-fontSize: 16px;
  --ARC-sizing-large-horizontalSpace: 12px;
  --ARC-sizing-large-verticalSpace: 6px;
}

/* box-shadow styles */
:root {
  --ARC-boxShadow-element-focus: 0 2px 4px 0;
  --ARC-boxShadow-fakeBorder:
    1px 0 0 0 var(--color-border),
    -1px 0 0 0 var(--color-border),
    0 1px 0 0 var(--color-border),
    0 -1px 0 0 var(--color-border);
}

.ArcAccordion {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  transition: height 300ms;
}

  .ArcAccordion .item {
    display: flex;
    flex-direction: column;
    border-bottom: 1px solid var(--color-border);
    transition: height 300ms;
  }

  .ArcAccordion .item .header {
      flex: 0 0 auto;
      height: -webkit-fit-content;
      height: -moz-fit-content;
      height: fit-content;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 8px 12px 8px 0;
      cursor: pointer;
    }

  .ArcAccordion .item .header .label {
        flex: 1 1;
      }

  .ArcAccordion .item .header .ArcAccordion-Button {
        flex: 0 0 24px;
        width: 24px;
        height: 24px;
        padding: 0;
        margin-right: 8px;

        display: flex;
        justify-content: center;
        align-items: center;

        border-radius: 100%;

        background: white;
        border: 2px solid var(--grey-2);
        transform: rotate(0deg);
        transition: 300ms;
        cursor: s-resize;
      }

  .ArcAccordion .item .header .ArcAccordion-Button .X line {
          stroke: var(--grey-2);
          stroke-width: 2px;
        }

  .ArcAccordion .item .header .ArcAccordion-Button.expanded {
          cursor: n-resize;
          transform: rotate(45deg);
        }

  .ArcAccordion .item .children {
      overflow: hidden;
      opacity: 1;
      padding: 0 2px;
      transition: height 300ms, opacity 150ms;
      transition-delay: 0, 150ms;
    }

  .ArcAccordion .item .children.collapsed {
        opacity: 0;
        transition: height 300ms, opacity 150ms;
        transition-delay: 0, 0;
      }

/*
available variables

--ApplicationBanner-background-color
--ApplicationBanner-color
--ApplicationBanner-logo-color
--ApplicationBanner-temp-notification-color
*/

.ApplicationBanner {
  --i-background-color: var(--ApplicationBanner-background-color, var(--black));
  --i-color: var(--ApplicationBanner-color, var(--white));
  --i-logo-color: var(--ApplicationBanner-logo-color, var(--white));

  background-color: var(--i-background-color);
  padding: 1.5rem 3rem 1.5rem 6rem;
  display: grid;
  grid-template-columns: 1fr;
  grid-auto-flow: column;
  align-items: center;
  color: var(--i-color);
  grid-gap: 3rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.ApplicationBanner-profile {
    display: grid;
    grid-auto-flow: column;
    align-items: center;
    grid-gap: 1rem;
  }

.ApplicationBanner-profileImage {
      width: 4rem;
      height: 4rem;
      border-radius: 100%;
      overflow: hidden;
      box-shadow: inset 0 0 0 2px var(--i-color);
    }

.ApplicationBanner-profileName {
    }

.ApplicationBanner-logo {
    --icon-color: var(--i-logo-color);
    width: 11rem;
  }

.ApplicationBanner-notification {
    --icon-color: var(
      --ApplicationBanner-temp-notification-color,
      var(--yellow)
    );
    width: 2rem;
  }

.ApplicationBanner-menu {
    --icon-color: var(--i-color);
  }

.ArcBoxGraph-Edge {
  --color: orange;
  --icon-size: 5px;
  width: 100px;
  height: 0px;
  transform-origin: 0% 50%;
  border-bottom: 0.5px solid var(--color);
  border-top: 0.5px solid var(--color);
  position: absolute;
}

  .ArcBoxGraph-Edge.hereditary {
    border-bottom: 0.5px dotted var(--color);
    border-top: 0.5px dotted var(--color);
  }

  .ArcBoxGraph-Edge .origin-icon {
    position: absolute;
    left: 0;
    margin-top: calc(-0.5 * var(--icon-size));
    margin-left: calc(-0.866 * var(--icon-size));
    height: var(--icon-size);
    width: var(--icon-size);
    border-radius: 100vh;
    background: var(--color);
  }

  .ArcBoxGraph-Edge .terminus-icon {
    position: absolute;
    right: 0;
    margin-top: calc(-1 * var(--icon-size)); /* 0.866 comes from maths */
    transform: rotate(180deg) translate(-50%);
    border-top: calc(0.866 * var(--icon-size)) solid transparent;
    border-bottom: calc(0.866 * var(--icon-size)) solid transparent;
    border-right: var(--icon-size) solid var(--color);
  }

.ArcBoxGraph-Edges {
  position: relative;
  pointer-events: none;
  z-index: 10;
}

.ArcBoxGraph-Node {
  --drag-target-color: rgba(var(--tertiary-rgb), 0.3);
  --selected-color: var(--tertiary);
  display: flex;
  border: 1px solid black;
  flex-direction: column;
  margin: 10px;
  padding: 10px;
  transition: opacity 0.3s, box-shadow 0.3s;
  background: white;
  position: relative;
}

  .ArcBoxGraph-Node .ArcBoxGraph-Node-drag-target {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    transition: opacity 0.3s;
    opacity: 0;
    background: var(--drag-target-color);
  }

  .ArcBoxGraph-Node.drag {
    opacity: 1;
  }

  .ArcBoxGraph-Node.drag-over .drag-target {
      opacity: 0.5;
    }

  .ArcBoxGraph-Node.selected,
  .ArcBoxGraph-Node .selected {
    box-shadow: 0px 0px 10px var(--selected-color);
  }

.ArcBoxGraph-CollapsedNode {
  display: flex;
}

  .ArcBoxGraph-CollapsedNode .ArcBoxGraph-CollapsedNode-internal-content {
    flex: 1 1 auto;
    justify-content: space-between;
    display: flex;
    z-index: 10;
  }

.ArcBoxGraph-ExpandedNode .ArcBoxGraph-ExpandedNode-children {
    display: flex;
    flex: 1 0 auto;
    flex-direction: row;
    flex-wrap: wrap;
    margin-top: 10px;
    z-index: 10;
  }

    .ArcBoxGraph-ExpandedNode .ArcBoxGraph-ExpandedNode-children .ArcBoxGraph-ExpandedNode-children-column {
      flex: 1 1 auto;
      display: flex;
      flex-wrap: wrap;
    }

    .ArcBoxGraph-ExpandedNode .ArcBoxGraph-ExpandedNode-children .ArcBoxGraph-Node {
      flex: 1 1 auto;
    }

.ArcBoxGraph-Nodes {
  position: relative;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  background: white;
}

  .ArcBoxGraph-Nodes .ArcBoxGraph-Node {
    flex: 1 1 auto;
  }

.ArcBoxGraph {
  --min-height: 400px;
  display: flex;
  min-height: var(--min-height);
}

  .ArcBoxGraph .ArcBoxGraph-viewport {
    flex: 1 1 auto;
    overflow: scroll;
    display: flex;
    position: relative;
  }

  .ArcBoxGraph .ArcBoxGraph-Nodes {
    flex: 1 1 auto;
  }

  .ArcBoxGraph .ArcBoxGraph-Edges {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

/* Variables */
.ArcButton,
.ArcButton.ArcSizeDefault,
.ArcSizeDefault .ArcButton {
  --ArcButton-fontSize: var(--ARC-sizing-fontSize);
  --ArcButton-horizontalSpace: var(--ARC-sizing-horizontalSpace);
  --ArcButton-verticalSpace: var(--ARC-sizing-verticalSpace);
}

.ArcButton.ArcSizeCompact,
.ArcSizeCompact .ArcButton {
  --ArcButton-fontSize: var(--ARC-sizing-compact-fontSize);
  --ArcButton-horizontalSpace: var(--ARC-sizing-compact-horizontalSpace);
  --ArcButton-verticalSpace: var(--ARC-sizing-compact-verticalSpace);
}

.ArcButton.ArcSizeLarge,
.ArcSizeLarge .ArcButton {
  --ArcButton-fontSize: var(--ARC-sizing-large-fontSize);
  --ArcButton-horizontalSpace: var(--ARC-sizing-large-horizontalSpace);
  --ArcButton-verticalSpace: var(--ARC-sizing-large-verticalSpace);
}

/* Styles */
.ArcButton {
  /* sizing and alignment */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  padding: calc(2 * var(--ArcButton-verticalSpace)) var(--ArcButton-horizontalSpace);

  /* aesthetic */
  border: 1px solid var(--primary);
  border-radius: 4px;
  background: var(--primary);
  color: var(--on-primary);
  font-size: var(--ArcButton-fontSize);
  font-weight: 500;
  line-height: normal;
  text-align: center;
  cursor: pointer;
  outline: none;
}
.ArcButton--disabled {
    cursor: not-allowed;
    border-color: var(--primary-disabled);
    background: var(--primary-disabled);
  }
.ArcButton--disabled:hover {
      cursor: not-allowed;
    }
.ArcButton:hover:not(.ArcButton--disabled),
  .ArcButton:active:not(.ArcButton--disabled) {
    border-color: var(--primary-hover);
    background: var(--primary-hover);
  }
.ArcButton-success {
    border-color: var(--tertiary);
    background: var(--tertiary);
    color: var(--on-secondary);
  }
.ArcButton-success:hover:not(.ArcButton--disabled),
    .ArcButton-success:active:not(.ArcButton--disabled) {
      border-color: var(--tertiary-hover);
      background: var(--tertiary-hover);
    }
.ArcButton-success.ArcButton--disabled {
      border-color: var(--tertiary-disabled);
      background: var(--tertiary-disabled);
    }
.ArcButton-secondary {
    border: 1px solid var(--secondary);
    background: var(--secondary);
    color: var(--on-secondary);
  }
.ArcButton-secondary:hover:not(.ArcButton--disabled),
    .ArcButton-secondary:active:not(.ArcButton--disabled) {
      border-color: var(--secondary-hover);
      background: var(--secondary-hover);
    }
.ArcButton-secondary.ArcButton--disabled {
      border-color: var(--secondary-disabled);
      background: var(--secondary-disabled);
    }
.ArcButton-tertiary {
    border: 1px solid var(--tertiary);
    background: var(--tertiary);
    color: var(--on-tertiary);
  }
.ArcButton-tertiary:hover:not(.ArcButton--disabled),
    .ArcButton-tertiary:active:not(.ArcButton--disabled) {
      border-color: var(--tertiary-hover);
      background: var(--tertiary-hover);
    }
.ArcButton-tertiary.ArcButton--disabled {
      border-color: var(--tertiary-disabled);
      background: var(--tertiary-disabled);
    }
.ArcButton-warning {
    border: 1px solid var(--warning);
    background: var(--warning);
    color: var(--on-warning);
  }
.ArcButton-warning:hover:not(.ArcButton--disabled),
    .ArcButton-warning:active:not(.ArcButton--disabled) {
      border-color: var(--warning-hover);
      background: var(--warning-hover);
    }
.ArcButton-warning.ArcButton--disabled {
      border-color: var(--warning-disabled);
      background: var(--warning-disabled);
    }
.ArcButton-error {
    border-color: var(--error);
    background: var(--error);
    color: var(--on-error);
  }
.ArcButton-error:hover:not(.ArcButton--disabled),
    .ArcButton-error:active:not(.ArcButton--disabled) {
      border-color: var(--error-hover);
      background: var(--error-hover);
    }
.ArcButton-error.ArcButton--disabled {
      border-color: var(--error-disabled);
      background: var(--error-disabled);
    }
.ArcButton:focus {
    box-shadow: var(--ARC-element-focus-shadow) rgba(var(--primary-rgb), 0.4);
    border-color: var(--primary);
  }

.ArcCarousel-ExpansionOverlay {
  --teal: #14da9e;
}

.ArcCarousel-ExpansionOverlay {
  position: fixed;
}

.ArcCarousel-ExpansionOverlay .ArcCarousel-ExpansionOverlay-bg {
    position: absolute;
    border: 1px solid var(--teal);
    display: flex;
    justify-content: center;
    align-items: center;
    background: #eaf1ff;
    cursor: pointer;
    transition: opacity 0.3s;
  }

.ArcCarousel-Entry {
  flex: 0 0 auto;
  background: rgba(255, 255, 255, 0.4);
  display: flex;
  position: relative;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}

  .ArcCarousel-Entry > * {
    pointer-events: none;
  }

  .ArcCarousel-Entry .ArcCarousel-Entry-divider {
    flex: 0 0 auto;
    background: transparent;
    display: flex;
    width: 20px;
    height: 100%;
  }

.ArcCarousel-Section {
  --title-block-height: 30px;
}

.ArcCarousel-Section {
  flex: 0 0 auto;
  display: flex;
  flex-direction: column;
}

.ArcCarousel-Section .ArcCarousel-Section-title {
    flex: 0 0 auto;
    display: flex;
    font-family: Lato;
    font-size: 16px;
    color: #919191;
    align-items: center;
    height: var(--title-block-height);
  }

.ArcCarousel-Section .ArcCarousel-Section-entries {
    background: #d2dce6;
    flex: 0 0 auto;
    display: flex;
    padding: 20px 0;
  }

.ArcCarousel-Section.ArcCarousel-Section--spacer {
    flex: 1 1 1px;
  }

.ArcCarousel-Section.ArcCarousel-Section--spacer .ArcCarousel-Section-entries {
      flex: 1 1 auto;
    }

.ArcCarousel-Section .ArcCarousel-Section-divider {
    flex: 0 0 auto;
    background: transparent;
    display: flex;
    width: 2px;
    background: white;
    margin: 0 20px;
  }

.ArcCarousel {
  --teal: #14da9e;
  --title-block-height: 30px;
  --arrow-size: 20px;
}

.ArcCarousel {
  position: relative;
  display: flex;
  margin: 20px 0;
}

.ArcCarousel .ArcCarousel-arrow {
    position: absolute;
    height: var(--arrow-size);
    width: var(--arrow-size);
    color: var(--teal);
    border: solid var(--teal);
    border-width: 0 2px 2px 0;
    display: inline-block;
    margin-top: auto;
    margin-bottom: auto;
    top: calc(var(--title-block-height) - calc(var(--arrow-size) / 2));
    bottom: 0;
    opacity: 0;
    transition: opacity 0.3s;
  }

.ArcCarousel .ArcCarousel-arrow:hover {
      opacity: 1;
    }

.ArcCarousel .ArcCarousel-arrow .ArcCarousel-arrow-click-target {
      position: absolute;
      top: calc(-1 * (var(--arrow-size) / 2));
      right: calc(-1 * (var(--arrow-size) / 2));
      left: calc(-1 * (var(--arrow-size) / 2));
      bottom: calc(-1 * (var(--arrow-size) / 2));
      cursor: pointer;
    }

.ArcCarousel .ArcCarousel-arrow--left  {
    transform: rotate(135deg);
    left: 20px;
    padding: 10px;
  }

.ArcCarousel .ArcCarousel-arrow--right {
    right: 20px;
    transform: rotate(-45deg);
  }

.ArcCarousel.not-expanded .expansion-bg {
    visibility: hidden;
    opacity: 0;
  }

.ArcCarousel.expanded .ArcCarousel-track {
    opacity: 0.5;
    overflow: hidden;
  }

.ArcCarousel .ArcCarousel-track {
    flex: 1 1 auto;
    display: flex;
    transition: opacity 0.3s;
    overflow: scroll;
    scroll-behavior: smooth;
  }

.ArcCarousel .ArcCarousel-track .ArcCarousel-Section:last-of-type .ArcCarousel-Section-title,
      .ArcCarousel .ArcCarousel-track .ArcCarousel-Section:last-of-type .ArcCarousel-Section-entries {
        padding-right: 20px;
      }

.ArcCarousel .ArcCarousel-track .ArcCarousel-Section:first-of-type .ArcCarousel-Section-title,
      .ArcCarousel .ArcCarousel-track .ArcCarousel-Section:first-of-type .ArcCarousel-Section-entries {
        padding-left: 20px;
      }

.ArcChartContainer {
  width: 100%;
  position: relative;
  overflow: hidden;
  display: flex;
  min-height: 80px;
}

  .ArcChartContainer-scrollOverflowElement {
    flex: 1 1 auto;
    display: flex;
    max-width: 100%;
  }

  .ArcChartContainer-scrollOverflowElement svg {
      position: absolute;
      top: 0;
      left: 0;
    }

  .ArcChartContainer-scrollOverflowElement .y-axis-container {
      flex: 0 0 auto;
      height: 100%;
      position: relative;
      overflow: scroll;
    }

  .ArcChartContainer-scrollOverflowElement .y-axis-container::-webkit-scrollbar {
        display: none;
      }

  .ArcChartContainer-scrollOverflowElement .content-column {
      display: flex;
      flex-direction: column;
      flex: 1 1 auto;
    }

  .ArcChartContainer-scrollOverflowElement .content-column .plot-area-container {
        flex: 1 1 auto;
        overflow: scroll;
        position: relative;
      }

  .ArcChartContainer-scrollOverflowElement .content-column .plot-area-container::-webkit-scrollbar {
          display: none;
        }

  .ArcChartContainer-scrollOverflowElement .content-column .x-axis-container {
        flex: 0 0 auto;
        position: relative;
        overflow: scroll;
      }

  .ArcChartContainer-zoomButtons {
    position: absolute;
    top: 6px;
    right: 6px;
    z-index: 10;
    display: flex;
    transition: opacity 0.3s;
    opacity: 0;
  }

  .ArcChartContainer-zoomButtons:hover,
    .ArcChartContainer-zoomButtons:focus {
      opacity: 1;
    }

  .ArcChartContainer-zoomButtons-button {
      border-radius: 100vw;
      border: 1px solid var(--grey-3);
      font-size: 24px;
      line-height: 24px;
      padding: 0 6px 3px;
      flex: 0 0 auto;
      display: flex;
      justify-content: center;
      align-items: center;
      opacity: 0.3;
      transition: opacity 0.3s;
      cursor: pointer;
      background: transparent;
    }

  .ArcChartContainer-zoomButtons-button:hover {
        opacity: 1;
        background: var(--grey-1);
      }

  .ArcChartContainer-zoomButtons-button:not(:first-of-type) {
        margin-left: 10px;
      }

/* Variables */
.ArcDropdown,
.ArcDropdown.ArcSizeDefault,
.ArcSizeDefault .ArcDropdown {
  --ArcDropdown-minHeight: var(--ARC-sizing-inputElement-height);
  --ArcDropdown-fontSize: var(--ARC-sizing-fontSize);
  --ArcDropdown-labelSize: var(--ARC-sizing-labelSize);
  --ArcDropdown-horizontalSpace: var(--ARC-sizing-horizontalSpace);
  --ArcDropdown-verticalSpace: var(--ARC-sizing-verticalSpace);
}

.ArcDropdown.ArcSizeCompact,
.ArcSizeCompact .ArcDropdown {
  --ArcDropdown-minHeight: var(--ARC-sizing-compact-inputElement-height);
  --ArcDropdown-fontSize: var(--ARC-sizing-compact-fontSize);
  --ArcDropdown-labelSize: var(--ARC-sizing-compact-labelSize);
  --ArcDropdown-horizontalSpace: var(--ARC-sizing-compact-horizontalSpace);
  --ArcDropdown-verticalSpace: var(--ARC-sizing-compact-verticalSpace);
}

.ArcDropdown.ArcSizeLarge,
.ArcSizeLarge .ArcDropdown {
  --ArcDropdown-minHeight: var(--ARC-sizing-large-inputElement-height);
  --ArcDropdown-fontSize: var(--ARC-sizing-large-fontSize);
  --ArcDropdown-labelSize: var(--ARC-sizing-large-labelSize);
  --ArcDropdown-horizontalSpace: var(--ARC-sizing-large-horizontalSpace);
  --ArcDropdown-verticalSpace: var(--ARC-sizing-large-verticalSpace);
}

/* Styles */
.ArcDropdown {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  font-size: var(--ArcDropdown-fontSize);
  min-width: 80px;
  border: 1px solid var(--color-border);
  position: relative;
}
.ArcDropdown select {
    position: absolute;
    width: 100%;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    outline: none;
    font-size: var(--ArcDropdown-fontSize);
    line-height: normal;
    background: transparent;
    background-image: none;
    border: 0;
    border-radius: 0;
    opacity: 0;
  }
.ArcDropdown .InfoIcon {
    position: absolute;
    top: 0;
    right: 0px;
    z-index: 1;
  }
.ArcDropdown.focused {
    border-color: var(--primary);
  }
.ArcDropdown.error {
    border-color: var(--error);
  }
/* this is just a style wrapper around a select... */
.ArcDropdown *:not(select, .InfoIcon) {
    pointer-events: none;
  }
.ArcDropdown-content-column {
    flex: 1 1;
    height: 100%;
    min-height: var(--ArcDropdown-minHeight);

    display: flex;
    flex-direction: column;
    justify-content: space-around;
    padding: var(--ArcDropdown-verticalSpace) var(--ArcDropdown-horizontalSpace);
  }
.ArcDropdown-content-column .ArcDropdown-label-row {
      display: flex;
      justify-content: space-between;
    }
.ArcDropdown-content-column .ArcDropdown-label-row label {
        font-size: var(--ArcDropdown-labelSize);
      }
.ArcDropdown-content-column .ArcDropdown-label-row .ArcDropdown-error-label {
        color: var(--error);
      }
.ArcDropdown-content-column .ArcDropdown-content-value {
      font-size: var(--ArcDropdown-fontSize);
      line-height: normal;
    }
.ArcDropdown.no-value select {
    color: grey;
  }
.ArcDropdown select:invalid {
    color: grey;
  }
.ArcDropdown-controls-column {
    min-height: var(--ArcDropdown-minHeight);
    flex: 0 0 var(--ArcDropdown-minHeight);
    border-left: 1px solid var(--color-border);
    background: var(--grey-0);
    pointer-events: none;
    display: flex;
    justify-content: center;
    align-items: center;
  }
.ArcDropdown-controls-column .arrow {
      margin-top: 6px;
      border: 6px solid transparent;
      border-top-color: var(--color-border-dark);
    }

.ArcEdge {
  stroke-width: 3px;
  cursor: pointer;
}

  .ArcEdge path {
    stroke: transparent;
    fill: var(--grey-4);
    opacity: 0.7;
  }

  .ArcEdge polygon {
    fill: var(--secondary);
    stroke: var(--grey-5);
    stroke-width: 1px;
  }

  .ArcEdge:hover path {
    stroke: var(--primary);
  }

.ArcFileInput .ArcInputSkeleton label {
    display: flex;
    flex-direction: column;
    height: -webkit-fit-content;
    height: -moz-fit-content;
    height: fit-content;
  }

    .ArcFileInput .ArcInputSkeleton label .file-descriptor {
      display: flex;
      align-items: center;
      padding: 4px;
      margin: -2px -4px;
      border-radius: 4px;
    }

    .ArcFileInput .ArcInputSkeleton label .file-descriptor:hover {
        background: var(--surface-hover);
      }

    .ArcFileInput .ArcInputSkeleton label .file-descriptor .file-name {
        flex: 1 1 1px;
      }

    .ArcFileInput .ArcInputSkeleton label .file-descriptor .ArcButton.delete {
        flex: 0 0 auto;
        width: -webkit-fit-content;
        width: -moz-fit-content;
        width: fit-content;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 12px;
        line-height: 12px;
        margin-right: 8px;
        padding: 4px;
        color: white;
        border: 1px solid var(--color-border);
        border-radius: 4px;
      }
  .ArcFileInput .hidden-input {
    opacity: 0;
    height: 0;
    width: 0;
  }

/* Variables */
.ArcForm,
.ArcForm.ArcSizeDefault,
.ArcSizeDefault .ArcForm {
  --ArcForm-fontSize: var(--ARC-sizing-fontSize);
  --ArcForm-horizontalSpace: var(--ARC-sizing-horizontalSpace);
  --ArcForm-verticalSpace: var(--ARC-sizing-verticalSpace);
}

.ArcForm.ArcSizeCompact,
.ArcSizeCompact .ArcForm {
  --ArcForm-fontSize: var(--ARC-sizing-compact-fontSize);
  --ArcForm-horizontalSpace: var(--ARC-sizing-compact-horizontalSpace);
  --ArcForm-verticalSpace: var(--ARC-sizing-compact-verticalSpace);
}

.ArcForm.ArcSizeLarge,
.ArcSizeLarge .ArcForm {
  --ArcForm-fontSize: var(--ARC-sizing-large-fontSize);
  --ArcForm-horizontalSpace: var(--ARC-sizing-large-horizontalSpace);
  --ArcForm-verticalSpace: var(--ARC-sizing-large-verticalSpace);
}

.ArcForm {
  --ArcForm-row-marginBottom: var(--ArcForm-horizontalSpace);
  --ArcForm-row-marginSides: calc(0.5 * var(--ArcForm-row-marginBottom));
}

.ArcForm--tightPack {
  --ArcForm-row-marginBottom: var(--ArcForm-verticalSpace);
}

.ArcForm--airTightPack {
  --ArcForm-row-marginBottom: -1px;
  --ArcForm-row-marginSides: 0;
  padding-right: 1px;
}

/* Styles */
.ArcForm-row,
  .ArcForm-controls {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: center;
    margin-left: var(--ArcForm-row-marginSides);
    margin-right: var(--ArcForm-row-marginSides);
  }
.ArcForm-row > *, .ArcForm-controls > * {
      min-width: 100px;
      width: unset;
      flex: 1 1;
      margin-left: var(--ArcForm-row-marginSides);
      margin-right: var(--ArcForm-row-marginSides);
      margin-bottom: var(--ArcForm-row-marginBottom);
    }
.ArcForm-row > .ArcTitle, .ArcForm-controls > .ArcTitle {
      margin: 0 0 var(--ArcForm-verticalSpace);
    }
.ArcForm--airTightPack .ArcForm-row > .ArcTitle, .ArcForm--airTightPack .ArcForm-controls > .ArcTitle {
        margin: var(--ArcForm-verticalSpace) 0;
      }
.ArcForm-row .Toast:not(.hidden), .ArcForm-controls .Toast:not(.hidden) {
      margin: 0 var(--ArcForm-row-marginSides) var(--ArcForm-row-marginBottom);
      transition: 200ms;
    }
.ArcForm--airTightPack .ArcForm-row > * {
      margin-right: -1px;
    }
.ArcForm-description {
    font-size: var(--ArcForm-fontSize);
    text-align: center;
    margin: 0 0 var(--ArcForm-verticalSpace);
  }

/* this is here for now lolol */
.Toast {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  min-height: 36px;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  font-size: 12px;
  padding: 10px;
  border: 1px solid var(--color-border);
  transition: 500ms;
}
.Toast.success {
    background: var(--tertiary);
  }
.Toast.loading,
  .Toast.warning {
    background: var(--warning);
  }
.Toast.error,
  .Toast.failure {
    background: var(--error);
  }
.Toast.hidden {
    transition: 200ms;
    min-height: 0;
    height: 0;
    padding: 0;
    border-color: transparent;
    border-width: 0;
  }

.ArcObjectList > .text {
    margin-bottom: var(--ArcForm-verticalSpace);
    font-style: italic;
  }

.ArcObjectList > .ArcButton {
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
    margin: 0 auto var(--ArcForm-verticalSpace);
  }

.ArcObjectList .ArcObjectList-memberHeader {
    display: flex;
  }

.ArcObjectList .ArcObjectList-memberHeader .flex-button-offset {
      flex: 0 0 32px;
    }

.ArcObjectList .ArcObjectList-memberHeader .ArcTitle {
      flex: 1 1 1px;
      text-align: center;;
    }

.ArcObjectList .ArcObjectList-memberHeader .ArcButton.remove-member {
      flex: 0 0 24px;
      width: 24px;
      height: 24px;
      padding: 0;
      margin-right: 8px;
      display: flex;
      justify-content: center;
      align-items: center;
      border-radius: 4px;;
      background: white;
      border: 1px solid var(--grey-2);
    }

.ArcObjectList .ArcObjectList-memberHeader .ArcButton.remove-member svg {
        stroke: var(--grey-3);
        transform: rotate(45deg);
      }

.ArcObjectList .ArcObjectList-memberHeader .ArcButton.remove-member:hover {
        background: var(--grey-2);
      }

.ArcObjectList .ArcObjectList-memberHeader .ArcButton.remove-member:hover svg {
          stroke: var(--error);
          stroke-width: 2px;
        }

.ArcGantt {
  width: 100%;
  position: relative;
  overflow: hidden;
  border: none;
  display: flex;
  flex-direction: column;

  stroke-width: 1px;
  stroke: var(--grey-2);
}

  .ArcGantt-border {
    fill: transparent;
  }

  .ArcGantt-yAxis text {
    font-size: 12px;
    stroke: transparent;
    dominant-baseline: middle;
    text-anchor: middle;
    fill: var(--grey-4);
  }

  .ArcGantt-xAxis line {
      stroke: var(--grey-2);
      stroke-width: 1px;
      fill: transparent;
    }

  .ArcGantt-xAxis text {
      font-size: 8px;
      fill: var(--grey-4);
      stroke: none;
      text-anchor: end;
      dominant-baseline: middle;
      transform-box: fill-box;
      transform-origin: right center;
      transform: rotate(-45deg);
    }

  .ArcGantt-data rect {
    fill: rgba(var(--primary-rgb), 0.3);
    stroke: var(--grey-3);
  }

  .ArcGantt-data rect.is-hoverable {
      stroke: var(--grey-4);
      cursor: pointer;
    }

  .ArcGantt-data rect.is-hoverable:hover {
        stroke-width: 2px;
      }

.ArcNode {
  font-family: var(--fonts);
  fill: var(--surface);
  stroke-width: 2px;
  stroke: var(--grey-3);
  text-align: center;
  cursor: pointer;
}

  .ArcNode text {
    font-family: var(--fonts);
    font-size: var(--ARC-sizing-labelSize);
    text-anchor: middle;
    stroke-width: 0.5px;
    stroke: var(--on-surface);
    fill: var(--on-surface);
  }

  .ArcNode .Port text {
    font-size: calc(var(--ARC-sizing-labelSize) - 2px);
    dominant-baseline: central;
  }

  .ArcNode .Ports-inputPorts .Port-text {
    text-anchor: start;
  }

  .ArcNode .Ports-outputPorts .Port-text {
    text-anchor: end;
  }

@-webkit-keyframes dashoffset {
  0% { stroke-dashoffset: 0px; }
  100% { stroke-dashoffset: 10000px; }
}

@keyframes dashoffset {
  0% { stroke-dashoffset: 0px; }
  100% { stroke-dashoffset: 10000px; }
}

.ArcGraph {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  position: relative;
  min-height: 40px;
  box-shadow: var(--ARC-boxShadow-fakeBorder);
  background: var(--surface);
}

.ArcGraph .ArcSVGContainer {
    margin: -1px;
  }

.ArcGraph .loading-container {
    position: absolute;
    z-index: 1;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

.ArcGraph .graph-container {
    position: absolute;
  }

.ArcGraph .graph-container .graph {
      box-shadow: 0 0 0 1px var(--color-border);
      vertical-align: bottom;
    }

.ArcGraph .graph-container .graph .grid {
        pointer-events: none;
        stroke-width: 2px;
        stroke: #b7b7b7;
        opacity: 0.14;
      }

.MenuModal {
  padding: 0;
  box-shadow: 0 2px 8px 0 rgba(37, 38, 94, 0.4);
}

.MenuModal .icon-container {
    display: flex;
    justify-content: center;
    align-items: center;
  }

.MenuModal .icon-container .Icon {
      max-height: 16px;
      max-width: 16px;
      height: auto;
      width: auto;
      color: transparent;
    }

.ArcGrid {
  stroke-width: 1px;
  stroke: var(--grey-2);
}

.InfoIcon {
  position: absolute;
  top: 0;
  right: 0;
  width: 18px;
  height: 18px;
  border-radius: 50%;
  font-size: 14px;
  line-height: normal;
  cursor: pointer;
  text-align: center;
  border: 1px solid var(--color-border);
  background: var(--secondary);
  color: var(--on-primary-variant);
  overflow: visible;
}

  .InfoIcon .tooltip {
    position: absolute;
    top: 8px;
    right: 16px;
    transform: translateY(-50%);
    z-index: 2;
    width: 400px;
    display: flex;
    justify-content: flex-end;
    align-items: center;
  }

  .InfoIcon .tooltip .tooltip-content {
      padding: 6px;
      background: var(--surface);
      color: var(--on-surface);
      border: 1px solid var(--color-border);
      box-shadow: var(--ARC-element-focus-shadow) rgba(var(--color-border-dark-rgb), 0.4);
    }

  .InfoIcon .tooltip .tooltip-arrow {
      width: 0;
      height: 0;
      border-top: 8px solid transparent;
      border-bottom: 8px solid transparent;
      border-left: 8px solid var(--color-border-dark);
    }

/* Variables */
.ArcInput,
.ArcInput.ArcSizeDefault,
.ArcSizeDefault .ArcInput {
  --ArcInput-minHeight: var(--ARC-sizing-inputElement-height);
  --ArcInput-fontSize: var(--ARC-sizing-fontSize);
  --ArcInput-labelSize: var(--ARC-sizing-labelSize);
  --ArcInput-horizontalSpace: var(--ARC-sizing-horizontalSpace);
  --ArcInput-verticalSpace: var(--ARC-sizing-verticalSpace);
}

.ArcInput.ArcSizeCompact,
.ArcSizeCompact .ArcInput {
  --ArcInput-minHeight: var(--ARC-sizing-compact-inputElement-height);
  --ArcInput-fontSize: var(--ARC-sizing-compact-fontSize);
  --ArcInput-labelSize: var(--ARC-sizing-compact-labelSize);
  --ArcInput-horizontalSpace: var(--ARC-sizing-compact-horizontalSpace);
  --ArcInput-verticalSpace: var(--ARC-sizing-compact-verticalSpace);
}

.ArcInput.ArcSizeLarge,
.ArcSizeLarge .ArcInput {
  --ArcInput-minHeight: var(--ARC-sizing-large-inputElement-height);
  --ArcInput-fontSize: var(--ARC-sizing-large-fontSize);
  --ArcInput-labelSize: var(--ARC-sizing-large-labelSize);
  --ArcInput-horizontalSpace: var(--ARC-sizing-large-horizontalSpace);
  --ArcInput-verticalSpace: var(--ARC-sizing-large-verticalSpace);
}

/* Styles */
.ArcInput {
  /* display */
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  width: 100%;
  min-height: var(--ArcInput-minHeight);
  font-size: var(--ArcInput-fontSize);
  /* we will left-pad, but for descriptions it looks weird if they're padded, so margins on input-row */
  padding: var(--ArcInput-verticalSpace) 0 0 var(--ArcInput-horizontalSpace);

  /* aesthetic */
  border: 1px solid var(--color-border);
  text-align: left;
  line-height: normal;
}
.ArcInput.focused {
    border-color: var(--primary);
    z-index: 1;
  }
.ArcInput .InfoIcon {
    position: absolute;
    top: 0;
    right: 0px;
  }
.ArcInput-label-row,
  .ArcInput-input-row {
    margin: 0 0 var(--ArcInput-verticalSpace);
  }
.ArcInput-label-row {
    display: flex;
    justify-content: space-between;
    padding-right: var(--ArcInput-horizontalSpace);
  }
.ArcInput-label-row label {
      font-size: var(--ArcInput-labelSize);
      height: var(--ArcInput-labelSize);
    }
.ArcInput-label-row .ArcInput-error-label {
      color: var(--error);
    }
.ArcInput-input-row {
    margin-right: var(--ArcInput-horizontalSpace);
  }
.ArcInput-input-row-textarea {
      margin-right: 0;
      margin-bottom: 0;
    }
.ArcInput-input-row-textarea .InfoIcon {
        right: var(--ArcInput-horizontalSpace);
      }
/* targets: input, textarea, ... */
.ArcInput-input-row > *:not(.InfoIcon):not(.PositioningPixel) {
      margin-top: -1px;
      margin-bottom: -1px;
      width: 100%;
      border: 0;
      padding: 0;
      resize: vertical;
      max-height: 50vh;
      outline: none;
      line-height: normal;
      font-size: var(--ArcInput-fontSize);
      border-width: 0;
      background: transparent;
      color: var(--on-surface);
    }
.ArcInput-input-row > *:not(.InfoIcon):not(.PositioningPixel)::-moz-placeholder {
        color: var(--on-surface);
        opacity: 0.7;
      }
.ArcInput-input-row > *:not(.InfoIcon):not(.PositioningPixel):-ms-input-placeholder {
        color: var(--on-surface);
        opacity: 0.7;
      }
.ArcInput-input-row > *:not(.InfoIcon):not(.PositioningPixel)::placeholder {
        color: var(--on-surface);
        opacity: 0.7;
      }
.ArcInput-input-row textarea {
      min-height: 2rem;
    }
.ArcInput-input-row input {
      min-height: calc(var(--ArcInput-fontSize) + 4px);
    }
.ArcInput.error {
    border-color: var(--error);
  }
.ArcInput.disabled {
    cursor: not-allowed;
  }
.ArcInput.disabled > label,
    .ArcInput.disabled > input,
    .ArcInput.disabled > textarea {
      pointer-events: none;
    }

/* Variables */
.ArcInputSkeleton,
.ArcInputSkeleton.ArcSizeDefault,
.ArcSizeDefault .ArcInputSkeleton {
  --ArcInputSkeleton-minHeight: var(--ARC-sizing-inputElement-height);
  --ArcInputSkeleton-fontSize: var(--ARC-sizing-fontSize);
  --ArcInputSkeleton-labelSize: var(--ARC-sizing-labelSize);
  --ArcInputSkeleton-horizontalSpace: var(--ARC-sizing-horizontalSpace);
  --ArcInputSkeleton-verticalSpace: var(--ARC-sizing-verticalSpace);
}

.ArcInputSkeleton.ArcSizeCompact,
.ArcSizeCompact .ArcInputSkeleton {
  --ArcInputSkeleton-minHeight: var(--ARC-sizing-compact-inputElement-height);
  --ArcInputSkeleton-fontSize: var(--ARC-sizing-compact-fontSize);
  --ArcInputSkeleton-labelSize: var(--ARC-sizing-compact-labelSize);
  --ArcInputSkeleton-horizontalSpace: var(--ARC-sizing-compact-horizontalSpace);
  --ArcInputSkeleton-verticalSpace: var(--ARC-sizing-compact-verticalSpace);
}

.ArcInputSkeleton.ArcSizeLarge,
.ArcSizeLarge .ArcInputSkeleton {
  --ArcInputSkeleton-minHeight: var(--ARC-sizing-large-inputElement-height);
  --ArcInputSkeleton-fontSize: var(--ARC-sizing-large-fontSize);
  --ArcInputSkeleton-labelSize: var(--ARC-sizing-large-labelSize);
  --ArcInputSkeleton-horizontalSpace: var(--ARC-sizing-large-horizontalSpace);
  --ArcInputSkeleton-verticalSpace: var(--ARC-sizing-large-verticalSpace);
}

/* Styles */
.ArcInputSkeleton {
  /* display */
  display: flex;
  align-items: stretch;
  width: 100%;
  min-height: var(--ArcInputSkeleton-minHeight);
  font-size: var(--ArcInputSkeleton-fontSize);
  outline: 0;

  /* aesthetic */
  border: 1px solid var(--color-border);
  text-align: left;
  line-height: normal;
}
.ArcInputSkeleton-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 0 0 fit-content;
    margin: 0 var(--ArcInputSkeleton-horizontalSpace);
  }
.ArcInputSkeleton-controls .ArcButton {
      font-size: calc(calc(var(--ArcInputSkeleton-fontSize) + var(--ArcInputSkeleton-labelSize)) / 2);
      line-height: calc(calc(var(--ArcInputSkeleton-fontSize) + var(--ArcInputSkeleton-labelSize)) / 2);
    }
.ArcInputSkeleton-content {
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    padding: var(--ArcInputSkeleton-verticalSpace) var(--ArcInputSkeleton-horizontalSpace) 0;
  }
.ArcInputSkeleton.focused {
    border-color: var(--primary);
    z-index: 1;
  }
.ArcInputSkeleton .PositioningPixel {
    width: 100%;
  }
.ArcInputSkeleton .InfoIcon {
    position: absolute;
    top: 0;
    right: 0px;
  }
.ArcInputSkeleton-label-row,
  .ArcInputSkeleton-input-row {
    margin: 0 0 var(--ArcInputSkeleton-verticalSpace);
  }
.ArcInputSkeleton-label-row {
    display: flex;
    justify-content: space-between;
  }
.ArcInputSkeleton-label-row label {
      font-size: var(--ArcInputSkeleton-labelSize);
      height: var(--ArcInputSkeleton-labelSize);
    }
.ArcInputSkeleton-label-row .ArcInputSkeleton-error-label {
      color: var(--error);
    }
.ArcInputSkeleton-input-row {
    min-height: calc(1rem + calc(2 * var(--ArcInputSkeleton-verticalSpace)));
  }
/* targets: input, textarea, ... */
.ArcInputSkeleton-input-row > label {
      width: 100%;
      border: 0;
      padding: 0;
      font-size: var(--ArcInputSkeleton-fontSize);
      height: var(--ArcInputSkeleton-fontSize);
    }
.ArcInputSkeleton-input-row .ArcInputSkeleton-placeholder {
      opacity: 0.7;
    }
.ArcInputSkeleton.error {
    border-color: var(--error);
  }
.ArcInputSkeleton.disabled {
    cursor: not-allowed;
  }
.ArcInputSkeleton.disabled > label,
    .ArcInputSkeleton.disabled > input,
    .ArcInputSkeleton.disabled > textarea {
      pointer-events: none;
    }

/* 
available variables

--LeftNavigation-background-color
--LeftNavigation-toggle-background-color
--LeftNavigation-toggle-hover-background-color
--LeftNavigation-toggle-border-color
--LeftNavigation-toggle-box-shadow
--LeftNavigation-toggle-hover-border-color
--LeftNavigation-adam-logo-color-1
--LeftNavigation-adam-logo-color-2
--LeftNavigation-link-color
--LeftNavigation-hover-indicator-color
--LeftNavigation-link-selected-color
 */

.LeftNavigation {
  /* internal variables */
  --i-background-color: var(--LeftNavigation-background-color, var(--black));
  --i-toggle-background-color: var(
    --LeftNavigation-toggle-background-color,
    var(--i-background-color)
  );
  --i-toggle-border-color: var(
    --LeftNavigation-toggle-border-color,
    var(--grey-2)
  );
  --i-toggle-box-shadow: var(
    --LeftNavigation-toggle-box-shadow,
    0 0 0.5em var(--black)
  );
  --i-toggle-hover-background-color: var(
    --LeftNavigation-toggle-hover-background-color,
    var(--i-background-color)
  );
  --i-toggle-hover-border-color: var(
    --LeftNavigation-toggle-hover-border-color,
    var(--i-toggle-border-color)
  );
  --i-toggle-hover-box-shadow: var(
    --LeftNavigation-toggle-hover-box-shadow,
    var(--i-toggle-box-shadow)
  );
  --i-adam-logo-color-1: var(--LeftNavigation-adam-logo-color-1, var(--white));
  --i-adam-logo-color-2: var(--LeftNavigation-adam-logo-color-2, var(--blue));
  --i-link-color: var(--LeftNavigation-link-color, var(--white));
  --i-hover-indicator-color: var(
    --LeftNavigation-hover-indicator-color,
    var(--grey-4)
  );
  --i-link-selected-color: var(
    --LeftNavigation-link-selected-color,
    var(--yellow)
  );

  background-color: var(--i-background-color);
  position: relative;
  display: grid;
  grid-template-rows: auto auto 1fr auto;
  grid-auto-flow: row;
  align-items: center;
  justify-items: start;
  font-family: 'Open Sans', sans-serif;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.LeftNavigation-top {
    align-self: start;
    padding: 2rem;
  }

.LeftNavigation-bottomLinks {
    padding-bottom: 2rem;
  }

.LeftNavigation-topContent {
    width: 100%;
    height: -webkit-fit-content;
    height: -moz-fit-content;
    height: fit-content;
    color: var(--i-link-color);
    display: flex;
    justify-content: center;
    align-items: center;
  }

.LeftNavigation-toggle {
    cursor: pointer;
    position: absolute;
    bottom: 4rem;
    right: -0.8rem;
    height: 5.5rem;
    width: 1.4rem;
    border-radius: 1rem;
    background-color: var(--i-toggle-background-color);
    border-width: 1px;
    border-style: solid;
    border-color: var(--i-toggle-border-color);
    box-shadow: var(--i-toggle-box-shadow);
  }

.LeftNavigation-toggle:hover {
      background-color: var(--i-toggle-hover-background-color);
      border-color: var(--i-toggle-hover-border-color);
      box-shadow: var(--i-toggle-hover-box-shadow);
    }

.LeftNavigation-toggle::before,
    .LeftNavigation-toggle::after {
      content: '';
      position: absolute;
      width: 1px;
      height: 80%;
      top: 10%;
      bottom: 10%;
      background-color: var(--i-toggle-border-color);
    }

.LeftNavigation-toggle::before {
      left: 0.3rem;
    }

.LeftNavigation-toggle::after {
      right: 0.3rem;
    }

.LeftNavigation-toggle:hover::before,
    .LeftNavigation-toggle:hover::after {
      background-color: var(--i-toggle-hover-border-color);
    }

.LeftNavigation-adamIcon {
    width: 2.2rem;
    --icon-color: var(--i-adam-logo-color-1);
    --icon-color-2: var(--i-adam-logo-color-2);
  }

.LeftNavigation-links,
  .LeftNavigation-bottomLinks {
    display: grid;
    grid-auto-flow: row;
    justify-items: stretch;
    grid-gap: calc(4rem + 2vh);
  }

.LeftNavigation-link {
    display: grid;
    grid-auto-flow: column;
    grid-gap: 1.5rem;
    justify-content: center;
    align-items: center;
    padding: 0 1.245em;
    cursor: pointer;
    position: relative;
    text-align: center;
    text-transform: uppercase;
    text-decoration: none;
    color: var(--i-link-color);
  }

.LeftNavigation-linkIcon {
      --icon-color: var(--i-link-color);
      display: block;
      margin: auto;
      width: 2rem;
    }

.LeftNavigation-linkText {
      display: none;
      margin: 0;
      line-height: 1;
    }

.is-open .LeftNavigation-link {
      justify-content: start;
    }

.is-open .LeftNavigation-linkText {
        display: inline;
      }

.LeftNavigation-link::before {
      content: '';
      position: absolute;
      width: 0.25em;
      top: 0;
      left: 0;
      bottom: 0;
    }

.LeftNavigation-link:hover::before,
    .LeftNavigation-link:hover .LeftNavigation-linkIcon {
      background-color: var(--i-hover-indicator-color);
    }

.LeftNavigation-link.is-selected .LeftNavigation-linkIcon {
      --icon-color: var(--i-link-selected-color);
    }

.LeftNavigation-link.is-selected .LeftNavigation-linkText {
      color: var(--i-link-selected-color);
    }

.LeftNavigation-link.is-selected::before {
      background-color: var(--i-link-selected-color);
    }

/* Variables */
.ArcModal,
.ArcModal.ArcSizeDefault,
.ArcSizeDefault .ArcModal {
  --ArcModal-minHeight: var(--ARC-sizing-displayElement-height);
  --ArcModal-fontSize: var(--ARC-sizing-fontSize);
  --ArcModal-labelSize: var(--ARC-sizing-labelSize);
  --ArcModal-horizontalSpace: var(--ARC-sizing-horizontalSpace);
  --ArcModal-verticalSpace: var(--ARC-sizing-verticalSpace);
}

.ArcModal.ArcSizeCompact,
.ArcSizeCompact .ArcModal {
  --ArcModal-minHeight: var(--ARC-sizing-compact-displayElement-height);
  --ArcModal-fontSize: var(--ARC-sizing-compact-fontSize);
  --ArcModal-labelSize: var(--ARC-sizing-compact-labelSize);
  --ArcModal-horizontalSpace: var(--ARC-sizing-compact-horizontalSpace);
  --ArcModal-verticalSpace: var(--ARC-sizing-compact-verticalSpace);
}

.ArcModal.ArcSizeLarge,
.ArcSizeLarge .ArcModal {
  --ArcModal-minHeight: var(--ARC-sizing-large-displayElement-height);
  --ArcModal-fontSize: var(--ARC-sizing-large-fontSize);
  --ArcModal-labelSize: var(--ARC-sizing-large-labelSize);
  --ArcModal-horizontalSpace: var(--ARC-sizing-large-horizontalSpace);
  --ArcModal-verticalSpace: var(--ARC-sizing-large-verticalSpace);
}

.ArcModal {
  position: fixed;
  width: 100vw;
  height: 100vh;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 10;
  display: flex;
  padding: var(--ArcModal-verticalSpace) var(--ArcModal-horizontalSpace);

  /* animations */
  opacity: 1;
}

.ArcModal.entering {
    -webkit-animation-name: fade-in;
            animation-name: fade-in;
    -webkit-animation-duration: 300ms;
            animation-duration: 300ms;
  }

.ArcModal.exiting {
    -webkit-animation-name: fade-in;
            animation-name: fade-in;
    -webkit-animation-duration: 300ms;
            animation-duration: 300ms;
    animation-direction: reverse;
  }

.ArcModal.exiting .ArcModal-layer-content {
      -webkit-animation-name: fade-in;
              animation-name: fade-in;
      -webkit-animation-duration: 200ms;
              animation-duration: 200ms;
      animation-direction: reverse;
    }

.ArcModal.exiting {
    opacity: 0;
  }

.ArcModal.exiting .ArcModal-layer-content {
      opacity: 0;
    }

.ArcModal.exited {
    opacity: 0;
    display: none;
  }

.ArcModal-layer-background {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: rgba(var(--background-rgb), 0.65);
    z-index: -1;
  }

.ArcModal-layer-content {
    background: var(--surface);
    border: 1px solid var(--color-border-dark);
    border-radius: 4px;
    margin: auto;
    z-index: 1;
    padding: var(--ArcModal-verticalSpace) var(--ArcModal-horizontalSpace);
  }

.ArcModal-helper-componentHidden {
    display: none;
  }

.ArcAlertModal {
  background-color: var(--theme-surface);
  color: var(--theme-surface-contrast);
  border-radius: 1rem;
  padding: 2rem;
  min-width: 28rem;
  max-width: 100%;
  display: inline-grid;
  grid-auto-flow: row;
  grid-gap: 2rem;
  gap: 2rem;
  line-height: 1.25;
  justify-content: center;
}

.ArcAlertModal-message {
  display: block;
  margin: auto;
  max-width: 60rem;
}

.ArcAlertModal-buttonRow {
  text-align: center;
}

.ArcConfirmModal {
  background-color: var(--theme-surface);
  color: var(--theme-surface-contrast);
  border-radius: 1rem;
  padding: 2rem;
  min-width: 28rem;
  max-width: 100%;
  display: inline-grid;
  grid-auto-flow: row;
  grid-gap: 2rem;
  gap: 2rem;
  line-height: 1.25;
}

.ArcConfirmModal-message {
  display: block;
  margin: auto;
}

.ArcConfirmModal-buttonRow {
  display: grid;
  grid-auto-flow: column;
  grid-template-columns: auto auto;
  justify-content: center;
  grid-gap: 1rem;
  gap: 1rem;
}

@-webkit-keyframes fadeIn1 {
  from {
    opacity: 1;
  }

  to {
    opacity: 0.1;
  }
}

@keyframes fadeIn1 {
  from {
    opacity: 1;
  }

  to {
    opacity: 0.1;
  }
}

@-webkit-keyframes fadeIn2 {
  from {
  }

  to {
    -webkit-backdrop-filter: blur(0.15em);
            backdrop-filter: blur(0.15em);
  }
}

@keyframes fadeIn2 {
  from {
  }

  to {
    -webkit-backdrop-filter: blur(0.15em);
            backdrop-filter: blur(0.15em);
  }
}

.ArcModal-backdrop {
  display: none;
  justify-content: center;
  align-items: center;
  position: fixed;
  z-index: 100;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  -webkit-animation: fadeIn2 100ms forwards;
          animation: fadeIn2 100ms forwards;
  background: linear-gradient(
    hsla(0, 0%, 0%, 0.1),
    hsla(0, 0%, 0%, 0.5) 75%,
    hsla(0, 0%, 0%, 0.75)
  );
  overflow-y: auto;
  padding: 1rem;
}

.ArcModal-backdrop::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  -webkit-animation: fadeIn1 1s forwards;
          animation: fadeIn1 1s forwards;
  z-index: -1;
}

.ArcModal-backdrop.is-shown {
  display: grid;
}

.MonoIcon-Add {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Archive {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ArrowDown {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ArrowLeft {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ArrowLeftDown {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ArrowLeftUp {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ArrowRight {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ArrowRightDown {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ArrowRightUp {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ArrowUp {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Attachment {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Ban {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-BarChart {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-BarChartAlt {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Board {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Book {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Bookmark {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Calendar {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Call {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Camera {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CaretDown {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CaretLeft {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CaretRight {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CaretUp {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Check {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ChevronDoubleDown {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ChevronDoubleLeft {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ChevronDoubleRight {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ChevronDoubleUp {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ChevronDown {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ChevronLeft {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ChevronRight {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ChevronUp {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CircleAdd {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CircleArrowDown {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CircleArrowLeft {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CircleArrowRight {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CircleArrowUp {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CircleCheck {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CircleError {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CircleHelp {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CircleInformation {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CircleRemove {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CircleWarning {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Clipboard {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ClipboardCheck {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ClipboardList {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Clock {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Close {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Cloud {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CloudDownload {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CloudUpload {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Computer {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Copy {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-CreditCard {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Delete {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Document {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-DocumentAdd {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-DocumentCheck {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-DocumentDownload {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-DocumentEmpty {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-DocumentRemove {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Download {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Drag {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Edit {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-EditAlt {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Email {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Expand {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Export {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ExternalLink {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Eye {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-EyeOff {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Favorite {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Filter {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-FilterAlt {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Folder {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-FolderAdd {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-FolderCheck {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-FolderDownload {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-FolderRemove {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Grid {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Heart {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Home {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Image {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Inbox {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Laptop {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Link {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-LinkAlt {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-List {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Location {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Lock {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-LogOut {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Map {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Megaphone {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Menu {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Message {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-MessageAlt {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Mobile {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Moon {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Notification {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-NotificationOff {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-OptionsHorizontal {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-OptionsVertical {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Pause {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Percentage {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Pin {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Play {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Refresh {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Remove {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Search {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Select {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Send {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Settings {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Share {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ShoppingCart {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ShoppingCartAdd {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Sort {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Speakers {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Stop {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Sun {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Switch {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Table {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Tablet {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Tag {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Undo {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Unlock {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-User {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-UserAdd {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-UserCheck {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-UserRemove {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Users {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-VolumeOff {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-VolumeUp {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-Warning {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ZoomIn {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.MonoIcon-ZoomOut {
  fill: var(--grey-3);
  fill: var(--icon-color, var(--grey-3));
}

.PositioningPixel {
  position: relative;
  width: 100%;
  height: 0;
  z-index: 1;
  overflow: visible;
}

.ArcSegmentedImage {
  position: relative;
  display: flex;
}

  .ArcSegmentedImage.inverted-x .ArcSegmentedImage-background-image {
      transform: scaleX(-1);
    }

  .ArcSegmentedImage .ArcSegmentedImage-background-image {
    flex: 1 1 auto;
  }

  .ArcSegmentedImage .ArcSegmentedImage-mask-image {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
    pointer-events: none;
  }

  .ArcSegmentedImage .ArcSegmentedImage-segments {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  .ArcSegmentedImage .ArcSegmentedImage-Segment {
    background: rgba(0, 0, 0, 0.3);
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
  }

/* Variables */
.ArcStretchyPointer,
.ArcStretchyPointer.ArcSizeDefault,
.ArcSizeDefault .ArcStretchyPointer {
  --ArcStretchyPointer-fontSize: var(--ARC-sizing-fontSize);
  --ArcStretchyPointer-horizontalSpace: var(--ARC-sizing-horizontalSpace);
  --ArcStretchyPointer-verticalSpace: var(--ARC-sizing-verticalSpace);
}

.ArcStretchyPointer.ArcSizeCompact,
.ArcSizeCompact .ArcStretchyPointer {
  --ArcStretchyPointer-fontSize: var(--ARC-sizing-compact-fontSize);
  --ArcStretchyPointer-horizontalSpace: var(
    --ARC-sizing-compact-horizontalSpace
  );
  --ArcStretchyPointer-verticalSpace: var(--ARC-sizing-compact-verticalSpace);
}

.ArcStretchyPointer.ArcSizeLarge,
.ArcSizeLarge .ArcStretchyPointer {
  --ArcStretchyPointer-fontSize: var(--ARC-sizing-large-fontSize);
  --ArcStretchyPointer-horizontalSpace: var(--ARC-sizing-large-horizontalSpace);
  --ArcStretchyPointer-verticalSpace: var(--ARC-sizing-large-verticalSpace);
}

.ArcStretchyPointer {
  --button-background-color: #f8e71c;
  --gap: 2ch;
  --overflow-amount: 1em;
}

.ArcStretchyPointer {
  position: relative;
  overflow: visible;
  width: 100%;
  cursor: pointer;
  font-family: Lato;
  font-weight: bold;
  font-size: 1.25em;
  font-size: var(--ArcStretchyPointer-fontSize, 1.25em);
  color: var(--black);
  text-align: center;
  background-color: var(--bluish-green);
  background-color: var(--button-background-color, var(--bluish-green));
  padding: calc(2 * var(--ArcStretchyPointer-verticalSpace))
    var(--ArcStretchyPointer-horizontalSpace);
  /* padding: var(--padding, 0.25em 1em); */
  color: var(--black);
  color: var(--button-color, var(--black));
  text-transform: capitalize;
  box-shadow: 0 0.1em 0.1em hsla(0, 0%, 0%, 0.1);
  box-shadow: var(--box-shadow, 0 0.1em 0.1em hsla(0, 0%, 0%, 0.1));
  border: none;
  border: var(--button-border, none);
  border-radius: 100vw;
  border-radius: var(--button-border-radius, 100vw);
  text-decoration: none;
  -webkit-text-decoration: var(--text-decoration, none);
          text-decoration: var(--text-decoration, none);
  transition: ease all 1s;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;

  display: grid;
  grid-template-columns: repeat(2, auto);
  grid-gap: var(--gap);
  gap: var(--gap);
  grid-auto-flow: column;
  align-items: center;
  justify-content: space-between;
}

.ArcStretchyPointer.is-expanded {
    width: calc(100% + 0);
    width: calc(100% + var(--overflow-amount, 0));
    grid-gap: calc(var(--gap) + 0);
    gap: calc(var(--gap) + 0);
    grid-gap: calc(var(--gap) + var(--overflow-amount, 0));
    gap: calc(var(--gap) + var(--overflow-amount, 0));
  }

.ArcStretchyPointer.is-expanded.is-left {
    margin-left: calc(-1 * 0);
    margin-left: calc(-1 * var(--overflow-amount, 0));
  }

.ArcSVGContainer {
  flex: 1 1 1px;
  width: 100%;
  overflow: auto;
  position: relative;
}

.ArcTable-Header th {
    position: sticky;
    top: 0;
    background: var(--secondary);
    color: var(--on-secondary);
    padding: var(--padding);
    cursor: default;
    z-index: 10;
  }

    .ArcTable-Header th.highlighted {
      background: var(--secondary-hover);
    }

    .ArcTable-Header th:not(:last-of-type) {
      border-right: var(--border);
    }

    .ArcTable-Header th.sortable {
      cursor: pointer;
    }

    .ArcTable-Header th.sortable:hover {
        background: var(--secondary-hover);
      }

.ArcTable-Cell  {
  padding: var(--padding);
  box-sizing: border-box;
}

  .ArcTable-Cell.highlighted {
    background: var(--cell-highlight-background);
  }

  .ArcTable-Cell.hover {
    background: var(--cell-hover-background);
  }

  .ArcTable-Cell:not(:last-of-type) {
    border-right: var(--border);
  }

.ArcTable-Row {
  border-bottom: var(--border);
  background: var(--cell-background);
}

  .ArcTable-Row:nth-child(2n) {
    background: var(--cell-alternating-background);
  }

  .ArcTable-Row.clickable {
    cursor: pointer;
  }

.ArcTable-SubTable.pinned-left,
  .ArcTable-SubTable.pinned-right {
    flex: 1 0 auto;
    display: flex;
    overflow: scroll;
  }

    .ArcTable-SubTable.pinned-left table, .ArcTable-SubTable.pinned-right table {
      flex: 1 1 auto;
    }
  .ArcTable-SubTable.scrollable,
  .ArcTable-SubTable.pinned-left {
    /* remove scrollbars from incorrect tables */
    -ms-overflow-style: none;
  }
  .ArcTable-SubTable.scrollable::-webkit-scrollbar, .ArcTable-SubTable.pinned-left::-webkit-scrollbar {
      display: none;
    }
  .ArcTable-SubTable.pinned-left {
    border-right: var(--border);
  }
  .ArcTable-SubTable.scrollable {
    flex: 1 1 auto;
    overflow-x: auto;
    display: flex;
    border-right: var(--border);
  }
  .ArcTable-SubTable.scrollable table {
      flex: 1 0 auto;
    }
  .ArcTable-SubTable table  { 
    border-collapse: collapse; 
    flex: 1 0 auto;
    z-index: 0;
  }
  .ArcTable-SubTable .top-spacer td, .ArcTable-SubTable .bottom-spacer td {
      padding: 0;
    }

.ArcTable {
  --border: 1px solid var(--color-border);
  --padding: 8px;
  --cell-background: var(--grey-0);
  --cell-alternating-background: var(--grey-1);
  --cell-highlight-background: var(--grey-2);
  --cell-hover-background: var(--grey-2-hover);

  display: flex;
  border: var(--border);
  font-size: 12px;
  max-height: 60vh;
}

  .ArcTable .Checkbox:hover {
    background: none;
  }

.ArcTitle {
  margin: 1rem 0 0.6rem;
}

  .ArcTitle.left {
    text-align: left;
  }

  .ArcTitle.center {
    text-align: center;
  }

  .ArcTitle.right {
    text-align: right;
  }

.ArcTree-Node {
  flex: 0 0 fit-content;
  font-size: var(--ArcTree-fontSize);
  border-radius: 4px;
}

  .ArcTree-Node-clickable .ArcTree-Node-label {
    flex: 1 1 1px;
    cursor: pointer;
  }

  .ArcTree-Node-clickable .ArcTree-Node-label:hover {
      background: var(--background);
    }

  .ArcTree-Node-selected > .ArcTree-Node-content {
    background: var(--primary);
    color: var(--on-primary);
  }

  /* the dot that is the leafIcon default should be colored */

  .ArcTree-Node-selected > .ArcTree-Node-content .ArcTree-Node-content-iconContainer-leafIcon {
      background: var(--on-primary);
    }

  .ArcTree-Node-selected > .ArcTree-Node-content:hover,
    .ArcTree-Node-selected > .ArcTree-Node-content:hover .ArcTree-Node-label {
      background: var(--primary-hover);
    }

  /* &&-selected => .ArcTree-Node.ArcTree-Node-selected > ... */

  .ArcTree-Node.ArcTree-Node-selected > .ArcTree-Node-childRow > .ArcTree-Node-childColumn .ArcTree-Node-childColumn-background {
    background: var(--primary);
  }

  .ArcTree-Node.ArcTree-Node-selected > .ArcTree-Node-childRow > .ArcTree-Node-childColumn .ArcTree-Node-childColumn-background:hover {
      background: var(--primary-hover);
    }

  .ArcTree-Node-disabled {
    color: rgba(var(--grey-5-rgb), 0.7);
  }

  .ArcTree-Node-content {
    display: flex;
    justify-content: flex-start;
    padding: var(--ArcTree-verticalSpace) var(--ArcTree-horizontalSpace);
    border-radius: var(--ArcTree-verticalSpace);
  }

  .ArcTree-Node-iconContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 0 0 var(--ArcTree-horizontalSpace);
    margin-right: var(--ArcTree-horizontalSpace);
    cursor: s-resize;
  }

  .ArcTree-Node-iconContainer-expanded {
      cursor: n-resize;
    }

  .ArcTree-Node-iconContainer-expanded .ArcTree-Node-expansionIcon {
        transform: rotate(90deg);
        transition: 200ms;
      }

  .ArcTree-Node-iconContainer-leaf {
      cursor: unset;
    }

  .ArcTree-Node-expansionIcon {
    width: 0;
    height: 0;
    border-left: var(--ArcTree-horizontalSpace) solid var(--color-border-dark);
    border-top: calc(var(--ArcTree-horizontalSpace) / 2) solid transparent;
    border-bottom: calc(var(--ArcTree-horizontalSpace) / 2) solid transparent;
    border-right: 0 solid transparent;
    transform: rotate(0deg);
    transition: 200ms;
  }

  .ArcTree-Node-leafIcon {
    width: var(--ArcTree-horizontalSpace);
    height: var(--ArcTree-horizontalSpace);
    background: var(--color-border-dark);
    border-radius: 100%;
    cursor: unset;
  }

  .ArcTree-Node-pendingCollapse > .ArcTree-Node-childRow {
    background: var(--background);
  }

  .ArcTree-Node .ArcTree-Node-childRow {
    display: flex;
    position: relative;
    padding-left: var(--ArcTree-horizontalSpace);
  }

  .ArcTree-Node .ArcTree-Node-childRow .ArcTree-Node-childColumn {
      flex: 0 0 var(--ArcTree-horizontalSpace);
      align-self: stretch;
      display: flex;
      align-items: center;
      justify-content: center;
    }

  .ArcTree-Node .ArcTree-Node-childRow .ArcTree-Node-childColumn .ArcTree-Node-childColumn-background {
        height: 100%;
        width: 2px;
        background: var(--color-border);
      }

  .ArcTree-Node .ArcTree-Node-childRow .ArcTree-Node-childColumn:hover {
        cursor: n-resize;
        background: var(--background);
      }

  .ArcTree-Node .ArcTree-Node-childRow .ArcTree-Node-childColumn:hover .ArcTree-Node-childColumn-background {
          background: var(--color-border-dark);
        }

  .ArcTree-Node .ArcTree-Node-children {
    flex: 1 1 1px;
    display: flex;
    flex-direction: column;
  }

/* Variables */
.ArcTree,
.ArcTree.ArcSizeDefault,
.ArcSizeDefault .ArcTree {
  --ArcTree-minHeight: var(--ARC-sizing-displayElement-height);
  --ArcTree-fontSize: var(--ARC-sizing-fontSize);
  --ArcTree-labelSize: var(--ARC-sizing-labelSize);
  --ArcTree-horizontalSpace: var(--ARC-sizing-horizontalSpace);
  --ArcTree-verticalSpace: var(--ARC-sizing-verticalSpace);
}

.ArcTree.ArcSizeCompact,
.ArcSizeCompact .ArcTree {
  --ArcTree-minHeight: var(--ARC-sizing-compact-displayElement-height);
  --ArcTree-fontSize: var(--ARC-sizing-compact-fontSize);
  --ArcTree-labelSize: var(--ARC-sizing-compact-labelSize);
  --ArcTree-horizontalSpace: var(--ARC-sizing-compact-horizontalSpace);
  --ArcTree-verticalSpace: var(--ARC-sizing-compact-verticalSpace);
}

.ArcTree.ArcSizeLarge,
.ArcSizeLarge .ArcTree {
  --ArcTree-minHeight: var(--ARC-sizing-large-displayElement-height);
  --ArcTree-fontSize: var(--ARC-sizing-large-fontSize);
  --ArcTree-labelSize: var(--ARC-sizing-large-labelSize);
  --ArcTree-horizontalSpace: var(--ARC-sizing-large-horizontalSpace);
  --ArcTree-verticalSpace: var(--ARC-sizing-large-verticalSpace);
}

.ArcTree {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  min-height: var(--ArcTree-minHeight);
  padding: var(--ArcTree-verticalSpace) var(--ArcTree-horizontalSpace);
  border: 1px solid var(--color-border);
}

/* Variables */
.ArcTreeBrowser,
.ArcTreeBrowser.ArcSizeDefault,
.ArcSizeDefault .ArcTreeBrowser {
  --ArcTreeBrowser-minHeight: var(--ARC-sizing-displayElement-height);
  --ArcTreeBrowser-fontSize: var(--ARC-sizing-fontSize);
  --ArcTreeBrowser-labelSize: var(--ARC-sizing-labelSize);
  --ArcTreeBrowser-horizontalSpace: var(--ARC-sizing-horizontalSpace);
  --ArcTreeBrowser-verticalSpace: var(--ARC-sizing-verticalSpace);
}

.ArcTreeBrowser.ArcSizeCompact,
.ArcSizeCompact .ArcTreeBrowser {
  --ArcTreeBrowser-minHeight: var(--ARC-sizing-compact-displayElement-height);
  --ArcTreeBrowser-fontSize: var(--ARC-sizing-compact-fontSize);
  --ArcTreeBrowser-labelSize: var(--ARC-sizing-compact-labelSize);
  --ArcTreeBrowser-horizontalSpace: var(--ARC-sizing-compact-horizontalSpace);
  --ArcTreeBrowser-verticalSpace: var(--ARC-sizing-compact-verticalSpace);
}

.ArcTreeBrowser.ArcSizeLarge,
.ArcSizeLarge .ArcTreeBrowser {
  --ArcTreeBrowser-minHeight: var(--ARC-sizing-large-displayElement-height);
  --ArcTreeBrowser-fontSize: var(--ARC-sizing-large-fontSize);
  --ArcTreeBrowser-labelSize: var(--ARC-sizing-large-labelSize);
  --ArcTreeBrowser-horizontalSpace: var(--ARC-sizing-large-horizontalSpace);
  --ArcTreeBrowser-verticalSpace: var(--ARC-sizing-large-verticalSpace);
}

.ArcTreeBrowser .ArcTree {
  border-left: none;
  border-right: none;
}

.ArcTreeBrowser {
  padding: var(--ArcTreeBrowser-verticalSpace) var(--ArcTreeBrowser-horizontalSpace);
}

.ArcTreeBrowser .ArcInputSkeleton {
    margin-bottom: -1px;
    z-index: 100;
  }

.ArcTreeBrowser .ArcTree {
    border-left: none;
    border-right: none;
  }

.ArcTreeBrowser-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 0 0 fit-content;
    margin: var(--ArcTreeBrowser-verticalSpace) calc(-1 * var(--ArcTreeBrowser-horizontalSpace)) 0;
  }

.ArcTreeBrowser-controls .ArcButton {
      font-size: calc(calc(var(--ArcTreeBrowser-fontSize) + var(--ArcTreeBrowser-labelSize)) / 2);
      line-height: calc(calc(var(--ArcTreeBrowser-fontSize) + var(--ArcTreeBrowser-labelSize)) / 2);
      margin: 0 calc(var(--ArcTreeBrowser-horizontalSpace) / 2);
    }

.ArcModal .ArcTreeBrowser {
  width: 500px;
  max-width: 100vw;
}

.c2fWleNgTKSmPpLeUlxSD {
  fill-rule: evenodd;
  fill: var(--icon-color);
  stroke: --icon-color;
  stroke: var(--icon-color-2, --icon-color);
  stroke-width: 0.4;
  width: 1em;
}

.oyRuoN1Zu5Trb9pXD6Iof {
  fill: var(--icon-color);
  width: 10em;
}

.mwJqiwcYzjVK2PtrDnS-k {
  fill-rule: nonzero;
  fill: var(--icon-color);
  stroke-width: 0;
  width: 2rem;
}

.CalendarIcon {
  fill: var(--icon-color);
  width: 2.2rem;
}

.ChartIcon {
  fill: var(--icon-color);
  width: 2.2rem;
}

.Icon-chevron {
  fill: #282828;
}

.QpBoNAwKBZXyd5Hiy9BB4 {
  fill: var(--icon-color);
  fill-rule: evenodd;
  width: 6.5rem;
}

._3xXO2gZO6s-t5yGXl93C5r {
  fill-rule: evenodd;
  fill: var(--icon-color);
  stroke-width: 0;
  width: 2rem;
}

.MenuIcon {
  stroke: var(--icon-color);
  fill: var(--icon-color);
  width: 2.7rem;
}

._12OjkIhOYhy_9t7UW4mJ9N {
  fill: var(--icon-color);
  fill-rule: evenodd;
  stroke-width: 0;
  width: 1em;
}

.PauseIcon {
  stroke: var(--icon-color);
  stroke-width: 2;
  padding: 0.5rem;
  border-radius: 100%;
  width: 6.5rem;
}

.PersonTagIcon {
  fill: var(--icon-color);
  width: 2.2rem;
}

.gHWv2pgj3b2iDf7tpVvse {
  fill: var(--icon-color);
  width: 1em;
}

._2_lJYzfa1chWdKkU5YZWVw {
  stroke: var(--icon-color);
  stroke-width: 2;
  padding: 0.5rem;
  border-radius: 100%;
  width: 6.5rem;
}

._2y4OBncG3ddkDaXUd-gApr {
  stroke-width: 2;
  padding: 0.5rem;
  width: 6.5rem;
}

._1pBAzq6mWF91aKi_i1AYc1 {
  stroke: var(--icon-color);
}

._1pD6PpjCKBl-5qBxyNA57r {
  fill: var(--icon-color);
}

._3yBl63Cd2vKVMuVNvrPwBS {
  fill-rule: nonzero;
  fill: var(--icon-color);
  stroke-width: 0;
  width: 2rem;
}

._2gLZotK4czzFyj-Bfs0CC {
  fill-rule: nonzero;
  fill: var(--icon-color);
  stroke-width: 0;
  width: 2rem;
}

._2SN59urTpMQZrB2-1qgZPb {
  fill-rule: nonzero;
  fill: var(--icon-color);
  stroke-width: 0;
  width: 2rem;
}

.WalletIcon {
  fill: var(--icon-color);
  width: 2.2rem;
}

.G4vjcFCzFoN6O-hyLHHhq {
  fill-rule: evenodd;
  fill: var(--icon-color);
  stroke-width: 0;
  width: 2rem;
}

.purple-example {
  --ApplicationBanner-background-color: var(--grey-1);
  --ApplicationBanner-color: var(--grey-4);
  --ApplicationBanner-logo-color: #9013fe;
  --ApplicationBanner-temp-notification-color: var(--grey-4);
}

.Gantt-Story {
  position: relative;
  display: flex;
  padding: 8px;
  flex-direction: column;
  justify-content: center;
}

  .Gantt-Story .ArcGantt {
    height: 300px;
    max-height: 300px;
    flex: 0 0 auto;
  }

  .Gantt-Story .ArcGantt .ArcGantt-bar.orange {
      fill: orange;
      fill-opacity: 0.3;
    }

  .Gantt-Story .absolute-mouseover {
    background: white;
    position: absolute;
    z-index: 10;
    border: 1px solid var(--color-border);
    padding: 8px;
    border-radius: 4px;
  }

.ArcNode {
  transition: stroke 0.7s;
}

  /* statuses */

  .ArcNode.PENDING {
    stroke: black;
  }

  .ArcNode.STARTED {
    stroke: var(--primary);
  }

  .ArcNode.FINISHED {
    stroke: var(--tertiary);
  }

  /* progress bars */

  .ArcNode .loading-line,
  .ArcNode .loading-line-bg {
    stroke: var(--tertiary);
    fill: transparent;
    stroke-width: 5px;
    transition: stroke-dasharray 0.7s;
    opacity: 1;
  }

  .ArcNode .loading-line.entering, .ArcNode .loading-line-bg.entering {
      stroke-dasharray: 0, 100%, 0;
      transition: stroke-dasharray 0.7s;
    }

  .ArcNode .loading-line.finished, .ArcNode .loading-line-bg.finished {
      transition: stroke-dasharray 0.7s, opacity 1.4s;
      opacity: 0;
    }

  .ArcNode .loading-line-bg {
    stroke: var(--background);
  }

.purple-example {
  --LeftNavigation-background-color: var(--grey-1);
  --LeftNavigation-toggle-background-color: var(--grey-2);
  --LeftNavigation-toggle-border-color: transparent;
  --LeftNavigation-toggle-box-shadow: 0 0 0.25em var(--grey-3);
  --LeftNavigation-toggle-hover-background-color: #9013fe;
  --LeftNavigation-toggle-hover-border-color: #9013fe;
  --LeftNavigation-toggle-hover-box-shadow: 0 0 0.25em #9013fe;
  --LeftNavigation-adam-logo-color-1: #9013fe;
  --LeftNavigation-adam-logo-color-2: #9013fe;
  --LeftNavigation-link-color: var(--grey-4);
  --LeftNavigation-link-selected-color: #9013fe;
  --LeftNavigation-hover-indicator-color: var(--grey-2);
}

.SegmentedImage-Story {
  display: flex;
  justify-content: center;
  align-items: center;
}

  .SegmentedImage-Story .ArcSegmentedImage {
    width: 100%;
    height: auto;
  }

.StationBanner {
  --background-color: var(--grey-5);
  --color: var(--white);
  --logo-color: var(--white);
  --notification-color: var(--yellow);

  background-color: var(--background-color);
  padding: 0 3rem 0 6rem;
  display: grid;
  grid-template-columns: 1fr;
  grid-auto-flow: column;
  align-items: center;
  color: var(--color);
  grid-gap: 2rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

  .StationBanner-title {
    font-family: Lato;
    font-size: 3.6rem;
    font-weight: bold;
    color: var(--yellow);
  }

  .StationBanner-station {
    cursor: pointer;
    padding: 0.5rem 2rem;
    font-family: Oswald;
    font-size: 6rem;
    color: var(--white);
  }

  .StationBanner-station:hover {
      background-color: var(--grey-4);
    }

  .StationBanner-station.is-selected {
      box-shadow: 0 0.2rem 2rem 0 hsla(0, 0%, 0%, 0.36);
      color: var(--grey-4);
      background-color: var(--yellow);
    }

.MySpecialStoryContainer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: black;
}

  .MySpecialStoryContainer .story-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

.story {
  background-color: var(--grey-1);
  width: 100%;
  height: 100%;
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, 5em);
  grid-gap: 1em;
  gap: 1em;
  padding: 4em;
  justify-content: center;
}

.cell {
  display: inline-flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: var(--white);
  border-radius: 0.25em;
  grid-gap: 0;
  gap: 0;
  padding: 1em;
  cursor: default;
  min-height: 5em;
}

.cell .label {
    font-size: 0;
    color: var(--white);
  }

.cell .icon {
    --icon-color: var(--nice-blue);
    width: 1.5em;
  }

.cell .label,
  .cell .icon {
    transition: inherit;
    transition-delay: inherit;
  }

.cell:hover {
    transition: ease-out all 80ms;
    background-color: var(--nice-blue);
    margin: -1em -3em;
    box-shadow: 0 0 0.5em var(--nice-blue);
    position: sticky;
    grid-gap: 1em;
    gap: 1em;
  }

.cell:hover .icon {
      --icon-color: var(--white);
      width: 2.5em;
    }

.cell:hover .label {
      font-size: 1em;
    }

.icon {
  --icon-color: var(--nice-blue);
}


/*# sourceMappingURL=main.08e76a28.chunk.css.map*/