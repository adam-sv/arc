/* Variables */
.ArcInput,
.ArcInput.ArcSizeDefault,
.ArcSizeDefault .ArcInput {
  --ArcInput-minHeight: var(--ARC-sizing-inputElement-height);
  --ArcInput-fontSize: var(--ARC-sizing-fontSize);
  --ArcInput-labelSize: var(--ARC-sizing-labelSize);
  --ArcInput-horizontalSpace: var(--ARC-sizing-horizontalSpace);
  --ArcInput-verticalSpace: var(--ARC-sizing-verticalSpace);
}

.ArcInput.ArcSizeCompact,
.ArcSizeCompact .ArcInput {
  --ArcInput-minHeight: var(--ARC-sizing-compact-inputElement-height);
  --ArcInput-fontSize: var(--ARC-sizing-compact-fontSize);
  --ArcInput-labelSize: var(--ARC-sizing-compact-labelSize);
  --ArcInput-horizontalSpace: var(--ARC-sizing-compact-horizontalSpace);
  --ArcInput-verticalSpace: var(--ARC-sizing-compact-verticalSpace);
}

.ArcInput.ArcSizeLarge,
.ArcSizeLarge .ArcInput {
  --ArcInput-minHeight: var(--ARC-sizing-large-inputElement-height);
  --ArcInput-fontSize: var(--ARC-sizing-large-fontSize);
  --ArcInput-labelSize: var(--ARC-sizing-large-labelSize);
  --ArcInput-horizontalSpace: var(--ARC-sizing-large-horizontalSpace);
  --ArcInput-verticalSpace: var(--ARC-sizing-large-verticalSpace);
}

/* Styles */
.ArcInput {
  /* display */
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  width: 100%;
  min-height: var(--ArcInput-minHeight);
  font-size: var(--ArcInput-fontSize);
  /* we will left-pad, but for descriptions it looks weird if they're padded, so margins on input-row */
  padding: var(--ArcInput-verticalSpace) 0 0 var(--ArcInput-horizontalSpace);

  /* aesthetic */
  border: 1px solid var(--color-border);
  text-align: left;
  line-height: normal;

  &.focused {
    border-color: var(--primary);
    z-index: 1;
  }

  .InfoIcon {
    position: absolute;
    top: 0;
    right: 0px;
  }

  &-label-row,
  &-input-row {
    margin: 0 0 var(--ArcInput-verticalSpace);
  }

  &-label-row {
    display: flex;
    justify-content: space-between;
    padding-right: var(--ArcInput-horizontalSpace);

    label {
      font-size: var(--ArcInput-labelSize);
      height: var(--ArcInput-labelSize);
    }

    .ArcInput-error-label {
      color: var(--error);
    }
  }

  &-input-row {
    margin-right: var(--ArcInput-horizontalSpace);

    &-textarea {
      margin-right: 0;
      margin-bottom: 0;

      .InfoIcon {
        right: var(--ArcInput-horizontalSpace);
      }
    }

    /* targets: input, textarea, ... */
    & > *:not(.InfoIcon):not(.PositioningPixel) {
      margin-top: -1px;
      margin-bottom: -1px;
      width: 100%;
      border: 0;
      padding: 0;
      resize: vertical;
      max-height: 50vh;
      outline: none;
      line-height: normal;
      font-size: var(--ArcInput-fontSize);
      border-width: 0;
      background: transparent;
      color: var(--on-surface);

      &::placeholder {
        color: var(--on-surface);
        opacity: 0.7;
      }
    }

    & textarea {
      min-height: 2rem;
    }

    & input {
      min-height: calc(var(--ArcInput-fontSize) + 4px);
    }
  }

  &.error {
    border-color: var(--error);
  }

  &.disabled {
    cursor: not-allowed;

    > label,
    > input,
    > textarea {
      pointer-events: none;
    }
  }
}
